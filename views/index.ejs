<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/styles/main.css">
    <script async
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCjzBPig4vNx2CoEhuykREjX0dGaIdvK3k&callback=initMap&libraries=places">
    </script>
    <script>
        function createMarker(place) {
            var marker = new google.maps.Marker({
                map: map,
                position: place.geometry.location
            });
        }

        function initMap() {
            const map = new google.maps.Map(
                document.getElementById('map'), {
                    center: {lat: 35.6895, lng: 139.6917},
                    zoom: 13
                }
            );

            // 以下をサーバーサイドで行う
            const service = new google.maps.places.PlacesService(map);
            // 半径x メートルの地名タイプをリクエストして、範囲内の情報をとってくる。
            const request = {
                location: map.getCenter(),
                radius: '500', // 半径500m以内
                type: ['store'] // 店舗タイプ
            };

            service.nearbySearch(request, (results, status) => {
                if (status === google.maps.places.PlacesServiceStatus.OK) {
                    for (let i = 0; i < results.length; i++) {
                        const place = results[i];
                        // console.dir(place);
                            // place.name： 場所（店舗など）の名前。
                            // place.geometry.location： 場所のジオメトリ情報。緯度と経度が含まれます。
                            // place.place_id： Google Places APIで一意に識別される場所のID。
                            // place.icon： 場所を表すアイコンのURL。
                            // place.rating： 場所の評価点数。ユーザーレビューに基づいています。
                            // place.user_ratings_total： ユーザーレビューの総数。
                            // place.vicinity： 場所の近くにある住所や地名などの関連情報。

                        // 口コミの件数や評価点数に基づいてフィルタリング
                        if (!place.user_ratings_total < 10 && !place.rating < 3) {
                            // 店舗の詳細情報を取得
                            service.getDetails({ placeId: place.place_id }, (placeDetails, status) => {
                                if (status === google.maps.places.PlacesServiceStatus.OK) {
                                    console.log('店舗名:', placeDetails.name);
                                    console.log('電話番号:', placeDetails.formatted_phone_number);
                                    console.log('メッセージ機能の有無:', placeDetails.business_status);
                                    console.log('レビュー総数:', placeDetails.user_ratings_total);

                                }
                            });
                        }
                    }
                }

                console.dir(results);
            });
        }
    </script>
    <title><%= title %></title>
</head>
<body>
    <form action="POST">
        <h1><%= message %></h1>
        <div id="map" style="width: 100%; height: 500px;"></div>

        <div>
            検索する地名
            <input type="text" id="name">
            検索するタイプ
            <input type="text" id="type">
        </div>
        <div id="result"></div>
    </form>
</body>
</html>